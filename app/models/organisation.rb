class Organisation < ApplicationRecord
  has_paper_trail

  has_many :users, dependent: :destroy
  has_many :api_keys, dependent: :destroy

  enum :status, {
    unregistered: 0,
    authorised: 1,
    pending: 2,
    rejected: 3,
  }

  class << self
    def from_profile!(government_gateway_profile)
      find_or_initialize_by(organisation_id: government_gateway_profile["bas:groupId"]).tap do |organisation|
        if organisation.new_record?
          organisation.description = "Autogenerated on #{Time.zone.now.iso8601}"
          organisation.status = :unregistered

          organisation.save!
        end
      end
    end

    def find_or_associate_implicit_organisation_to(user)
      find_or_initialize_by(name: user.email_address).tap do |organisation|
        if organisation.new_record?
          organisation.organisation_id = SecureRandom.uuid.upcase # TODO: This is for backwards compatibility, remove later
          organisation.description = "Default implicit organisation for initial user #{user.email_address}"
          organisation.status = :unregistered
          organisation.save!
          user.organisation = organisation
          user.save!
        end
      end
    end
  end
end
