name: Deploy to development

on:
  push:
    branches-ignore:
      - main
  pull_request:
    branches-ignore:
      - main
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

env:
  AWS_REGION: eu-west-2
  ECR_URL: 382373577178.dkr.ecr.eu-west-2.amazonaws.com/tariff-dev-hub-production
  ENVIRONMENT: development
  IAM_ROLE_ARN: arn:aws:iam::844815912454:role/GithubActions-ECS-Deployments-Role
  SKIP: terraform_docs,actionlint-docker

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: ${{ runner.os }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pre-commit-
      - uses: actions/setup-python@v5
        with:
          python-version: '3'
      - id: ruby-version
        run: echo "RUBY_VERSION=$(cat .ruby-version)" >> "$GITHUB_OUTPUT"
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ steps.ruby-version.outputs.RUBY_VERSION }}
          bundler-cache: true
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.0
      - uses: trade-tariff/trade-tariff-tools/.github/actions/setup-tflint@main
      - uses: trade-tariff/trade-tariff-tools/.github/actions/setup-ssh@main
        with:
          ssh-key: ${{ secrets.PRIVATE_SSH_KEY }}
      - run: cd terraform/ && terraform init -backend=false -reconfigure
      - run: pip install pre-commit
      - run: pre-commit run --all-files
      - run: bundle exec brakeman

  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: tariff_dev_hub_test
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - id: ruby-version
        run: echo "RUBY_VERSION=$(cat .ruby-version)" >> "$GITHUB_OUTPUT"
      - run: echo ${{ env.DOCKER_IMAGE }}
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ steps.ruby-version.outputs.RUBY_VERSION }}
          bundler-cache: true
      - run: bundle exec rspec
        env:
          DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/tariff_dev_hub_test"

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - id: docker-tag
        run: echo "DOCKER_TAG=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"
      - uses: trade-tariff/trade-tariff-tools/.github/actions/terraform-plan@main
        with:
          environment: ${{ env.ENVIRONMENT }}
          ref: ${{ steps.docker-tag.outputs.DOCKER_TAG }}
          ssh-key: ${{ secrets.PRIVATE_SSH_KEY }}
      - uses: trade-tariff/trade-tariff-tools/.github/actions/build-and-push@main
        with:
          ecr-url: ${{ env.ECR_URL }}
          ref: ${{ steps.docker-tag.outputs.DOCKER_TAG }}

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build
      - test
    steps:
      - uses: actions/checkout@v4
      - id: docker-tag
        run: echo "DOCKER_TAG=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"
      - uses: trade-tariff/trade-tariff-tools/.github/actions/terraform-apply@main
        with:
          environment: ${{ env.ENVIRONMENT }}
          ref: ${{ steps.docker-tag.outputs.DOCKER_TAG }}
          ssh-key: ${{ secrets.PRIVATE_SSH_KEY }}

  notifications:
      runs-on: ubuntu-latest
      needs: deploy
      if: always()
      steps:
        - uses: actions/checkout@v4
        - uses: trade-tariff/trade-tariff-tools/.github/actions/slack-notify@main
          with:
            result: ${{ needs.deploy.result }}
            slack_webhook: ${{ secrets.SLACK_WEBHOOK }}

  e2etest:
    uses: trade-tariff/trade-tariff-tools/.github/workflows/e2e-fpo-tests.yml@main
    needs: deploy
    with:
      test-environment: development
    secrets:
      scp-username: ${{ secrets.SCP_USERNAME }}
      scp-password: ${{ secrets.SCP_PASSWORD }}
